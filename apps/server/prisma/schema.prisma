// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  email     String   @unique
  name      String
  password  String

  profileImgUrl String @default("")
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  booksables Bookable[]
  bookedSlots BookedSlot[]

}

enum EventStatus {
  AVAILABLE
  FULL
  ENDED
}

enum InviteRole {
  HOST
  PARTICIPATOR
}

enum BookableType {
  RECURRING
  ONE_TIME
}


model Bookable {
  id String @id @default(uuid())

  name String
  description String
  location String

  availableSlots AvailableSlot[]
  bookedSlots BookedSlot[]


  host User @relation(fields: [hostId], references: [id])
  hostId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type BookableType

  visible Boolean @default(true)

  duration Int @default(1800000)


}

model AvailableSlot {
  id String @id @default(uuid())

  startTime DateTime
  endTime DateTime

  bookableId String
  bookable Bookable @relation(fields: [bookableId],references: [id])

}

model Attendee {
  id String @id @default(uuid())

  firstName String
  lastName String
  email String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bookedSlots BookedSlot[]

}


model BookedSlot {
  id String @id @default(uuid())

  startTime DateTime
  duration Int @default(1800000)
  endTime DateTime

  bookableId String
  bookable Bookable @relation(fields: [bookableId],references: [id])

  userId String
  user User @relation(fields: [userId],references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  attendeeId String
  attendee Attendee @relation(fields: [attendeeId],references: [id])
  attendeeBookingRefrenceCode String

}